<Window x:Class="KOLHOZ_Marker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:local="clr-namespace:KOLHOZ_Marker"
        
        Title="MainWindow" Height="450" Width="800" 
        Loaded="Window_Loaded">

    <Grid>
        <Grid Panel.ZIndex="0" Background="AliceBlue">
            
        </Grid>
        
        <Grid ShowGridLines="False" Panel.ZIndex="1">
            <Grid.Resources>
                <!--Кисті-->
                <SolidColorBrush  x:Key="DarkBrsh" Color="#202225"/>
                <SolidColorBrush  x:Key="MidBrsh" Color="#2f3136"/>
                <SolidColorBrush  x:Key="LightBrsh" Color="#36393f"/>
                <SolidColorBrush  x:Key="ExtraLightBrsh" Color="#3e4147"/>

                <!--Кнопки-->
                <Image x:Key="Cog" Source="pack://application:,,,/Resourses\Cog.png"/>
                <Image x:Key="Add" Source="pack://application:,,,/Resourses\Add.png"/>
                <Image x:Key="Filtr" Source="pack://application:,,,/Resourses\Filtr.png"/>

                <DataTemplate x:Key="Context">
                    <Image Source="pack://application:,,,/Resourses\Context.png" />
                </DataTemplate>

                <Style x:Key="ExpanderHeaderFocusVisual">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <Border>
                                    <Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                                    <ContentPresenter HorizontalAlignment="Left" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="MyCoolExpanderStyle" TargetType="{x:Type Expander}">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
                    <Setter Property="Background" Value="Coral"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Expander}">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <DockPanel>
                                        <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Grid Background="Black" x:Name="ExpandSite" DockPanel.Dock="Bottom" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <Canvas>
                                                <Path Data="M 20,0 L 50,0 L35,10 z" StrokeThickness="0" Fill="{TemplateBinding Background}" Stretch="None"/>
                                            </Canvas>
                                            <ContentPresenter Focusable="false"/>
                                        </Grid>
                                    </DockPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="true">
                                        <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="SearchField" TargetType="TextBox">
                    <Setter Property="Background" Value="{StaticResource ExtraLightBrsh}"></Setter>
                    <!--<Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/Resourses\magnifier.png" AlignmentX="Left" AlignmentY="Center" Stretch="Uniform"></ImageBrush>
                    </Setter.Value>
                </Setter>-->
                    <Setter Property="Foreground" Value="Black"></Setter>
                    <Setter Property="TextAlignment" Value="Left"></Setter>
                    <Setter Property="FontSize" Value="20"></Setter>


                    <Setter Property="Width" Value="200"></Setter>
                    <Setter Property="Margin" Value="20 8 0 8"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>

                            <ControlTemplate TargetType="TextBox">

                                <Border 
                                Name = "Brd" 
                                CornerRadius="25"
                                Background="{TemplateBinding Background}">
                                    <ScrollViewer x:Name="PART_ContentHost" Margin="8 5 8 5" VerticalAlignment="Center" HorizontalAlignment="Left"/>

                                    <!--<ContentPresenter
                                    Margin="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                </ContentPresenter>-->
                                </Border>


                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsFocused" Value="True">
                                        <Setter Property="Width" Value="500"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="TagFiltrStyle" TargetType="CheckBox">
                    <Setter Property="SnapsToDevicePixels" Value="False" />

                    <Setter Property="OverridesDefaultStyle" Value="true" />

                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />

                    <Setter Property="BorderBrush" Value="LightGray" />

                    <Setter Property="Margin" Value="10 5 10 10" />

                    <Setter Property="Foreground" Value="LightGray" />

                    <Setter Property="FontSize" Value="15" />

                    <Setter Property="FontFamily" Value="ComicSans" />

                    <Setter Property="Template">

                        <Setter.Value>

                            <ControlTemplate TargetType="CheckBox">

                                <BulletDecorator Background="Transparent">

                                    <BulletDecorator.Bullet>

                                        <Border x:Name="Border"
                                        Width="15"
                                        Height="15"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1"
                                        ClipToBounds="True">

                                            <Border.Effect>

                                                <DropShadowEffect BlurRadius="5" ShadowDepth="2" />

                                            </Border.Effect>

                                            <Path x:Name="CheckMark"
                                            Width="8"
                                            Height="8"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="M591.1,111c-4.9,0.7-7,5.1-9.9,8C468.1,231.9,355,344.8,242.3,458.1c-7.8,7.8-11.3,6.8-18.4-0.3
	C169.2,402.4,114,347.4,58.9,292.5c-3-3-5-7.4-10-7.9c0-0.8,0-1.6,0-2.4c24.7-24.6,49.7-49.1,74-74.1c6.1-6.2,9.2-5.6,14.9,0.2
	c29.2,29.8,59.1,59,88.3,88.9c6,6.2,8.8,5.6,14.6-0.2c86.4-86.8,173.2-173.3,259.5-260.2c7.4-7.4,11-7.8,18.4-0.1
	c23.7,24.5,48.3,48,72.5,71.9C591.1,109.4,591.1,110.2,591.1,111z"
                                            Stretch="Fill"
                                            Stroke="LightGray"
                                            StrokeEndLineCap="Round"
                                            StrokeStartLineCap="Round"
                                            StrokeThickness="2" />

                                        </Border>

                                    </BulletDecorator.Bullet>

                                    <ContentPresenter Margin="4,0,0,0"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                RecognizesAccessKey="True" />

                                </BulletDecorator>

                                <ControlTemplate.Triggers>

                                    <Trigger Property="IsChecked" Value="false">

                                        <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />

                                    </Trigger>

                                    <Trigger Property="IsFocused" Value="true">

                                        <Setter Property="BorderBrush" Value="White" />

                                    </Trigger>

                                    <Trigger Property="IsEnabled" Value="false">

                                        <Setter Property="BorderBrush" Value="Gray" />

                                        <Setter TargetName="CheckMark" Property="Stroke" Value="Gray" />

                                    </Trigger>

                                </ControlTemplate.Triggers>

                            </ControlTemplate>

                        </Setter.Value>

                    </Setter>

                </Style>


                <Style x:Key="ControllButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="{StaticResource DarkBrsh}"></Setter>
                    <Setter Property="Opacity" Value="0.9"></Setter>
                    <Setter Property="Cursor" Value="Hand"></Setter>


                    <Setter Property="Template">
                        <Setter.Value>

                            <ControlTemplate TargetType="Button">

                                <Border 
                                Name = "Brd" 
                                CornerRadius="5"
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter
                                    Margin="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    </ContentPresenter>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Opacity" Value="0.8"></Setter>
                                        <Setter Property="Background" Value="{StaticResource MidBrsh}"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Opacity" Value="1.0"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="AddButtonStyle" TargetType="Button" BasedOn="{StaticResource ControllButtonStyle}">
                    <Setter Property="Template">
                        <Setter.Value>

                            <ControlTemplate TargetType="Button">

                                <Border 
                                Name = "Brd" 
                               
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter
                                    Margin="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    </ContentPresenter>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Opacity" Value="0.8"></Setter>
                                        <Setter Property="Background" Value="{StaticResource MidBrsh}"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Opacity" Value="1.0"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>
                </Style>

                <Style x:Key="TitleButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="Transparent"></Setter>

                    <Setter Property="Cursor" Value="Hand"></Setter>
                    <Setter Property="FontSize" Value="20"></Setter>
                    <Setter Property="Margin" Value="7 0 7 0"></Setter>
                    <Setter Property="FontFamily" Value="ComicSans"></Setter>


                    <Setter Property="Template">
                        <Setter.Value>

                            <ControlTemplate TargetType="Button">

                                <Border 
                                Name = "Brd" 
                                
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter
                                    Margin="5"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Bottom">
                                    </ContentPresenter>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="False">

                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Opacity" Value="1.0"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>
                </Style>

                <!-- ContextMenu separator style -->
                <Style x:Key="MenuSeparatorStyle" TargetType="{x:Type Separator}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="IsTabStop" Value="False"/>
                    <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                    <Setter Property="Background" Value="#323232"/>
                    <Setter Property="Height" Value="5"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Separator}">
                                <Border Height="5" Margin="-2,2" VerticalAlignment="Center" Background="#FF464646"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!-- MenuItem style -->
                <Style x:Key="MenuItemStyle"  TargetType="{x:Type MenuItem}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Foreground" Value="#BEBEBE"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Grid Name="Root" Height="27" Background="{StaticResource MidBrsh}">
                                    <ContentPresenter Name="HeaderHost" Margin="10,0,0,0" ContentSource="Header" RecognizesAccessKey="True" HorizontalAlignment="Left" VerticalAlignment="Center"
                      TextOptions.TextRenderingMode="ClearType" TextBlock.FontSize="12" TextBlock.Foreground="{TemplateBinding Foreground}" TextOptions.TextFormattingMode="Display"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Root" Property="Background" Value="#505050"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter TargetName="Root" Property="Background" Value="#808080"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <!-- ContextMenu style -->
                <Style x:Key="ContextMenuStyle" TargetType="{x:Type ContextMenu}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Width" Value="170"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ContextMenu}">
                                <Grid Background="Transparent">
                                    <Border Margin="0,0,5,5" Background="{StaticResource MidBrsh}" BorderThickness="0">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="2"/>
                                        <Border.Effect>
                                            <DropShadowEffect BlurRadius="3" ShadowDepth="3" Color="Black" Opacity="0.5"/>
                                        </Border.Effect>
                                    </Border>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>

                <ContextMenu x:Key="ButtonContextMenu" 
                         FontFamily="Calibri" BorderBrush="{StaticResource MidBrsh}" Style="{StaticResource ContextMenuStyle}" Opened="OnContextMenuOpened">

                    <MenuItem Header="Tags" Style="{StaticResource MenuItemStyle}" Command="{Binding EditTags}" CommandParameter="{Binding toString}"/>

                    <Separator Style="{StaticResource MenuSeparatorStyle}"/>

                    <MenuItem Header="Open" Style="{StaticResource MenuItemStyle}" Command="{Binding Open}"/>

                    <Separator Style="{StaticResource MenuSeparatorStyle}" />

                    <MenuItem Header="Delete" Foreground="#FFC83232" Style="{StaticResource MenuItemStyle}"
                            Command="{Binding Delete}" CommandParameter="{Binding toString}"/>

                </ContextMenu>

                <Style x:Key="ContextMenuButtonStyle" TargetType="Button">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="ContentTemplate" Value="{StaticResource Context}"></Setter>

                    <Setter Property="Cursor" Value="Hand"></Setter>
                    <Setter Property="ContextMenu" Value="{StaticResource ButtonContextMenu}"></Setter>

                    <Setter Property="Template">
                        <Setter.Value>

                            <ControlTemplate TargetType="Button">

                                <Border 
                                Name = "Brd" 
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter
                                    Margin="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                    </ContentPresenter>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <EventTrigger RoutedEvent="Click">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                        <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                                    </BooleanAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                    </Trigger>
                                </ControlTemplate.Triggers>

                            </ControlTemplate>

                        </Setter.Value>
                    </Setter>
                </Style>

            </Grid.Resources>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="70"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="70"/>
            </Grid.RowDefinitions>

            <!--Фон-->
            <Rectangle Fill="{StaticResource DarkBrsh}" IsHitTestVisible="False" Grid.Column="0" Grid.Row="0" Grid.RowSpan="3"/>
            <Rectangle Fill="{StaticResource MidBrsh}" IsHitTestVisible="False" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3" Grid.ColumnSpan="2"/>

            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center">
                <Button Grid.Column="1" Click="btn_Click" Height="56" Width="56" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10 0 0 0" Style="{StaticResource ControllButtonStyle}" Content="{StaticResource Filtr}"></Button>
                <TextBox Style="{StaticResource SearchField}" Text="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></TextBox>
            </StackPanel>

            <ListBox HorizontalContentAlignment="Stretch"  VerticalContentAlignment="Stretch" Grid.Column="2" Grid.Row="1" Background="{StaticResource MidBrsh}" BorderBrush="{StaticResource MidBrsh}">
                <!--стіль, шоб не виділялось при наведенні-->
                <ListBox.ItemContainerStyle>
                    <Style  TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        <Setter Property="Padding" Value="2,0,0,0"/>
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style>
                                    <!-- This removes focus visualization -->
                                    <Setter Property="Control.Template" Value="{x:Null}"/>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                        </Trigger>
                                        <!-- Some default triggers removed to avoid background changes on selection -->
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>

                <Border BorderBrush="Transparent" CornerRadius="10,10,10,10" BorderThickness="1" Name="brd"
                Canvas.Top="{Binding ElementName=btn, Path=ActualHeight}">

                    <ListBox Name="CategoryListBox" Background="Transparent" BorderBrush="Transparent"
         ScrollViewer.VerticalScrollBarVisibility="Disabled" ItemsSource="{Binding Tags}">

                        <!--стіль, шоб не виділялось при наведенні-->
                        <ListBox.ItemContainerStyle>
                            <Style  TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="Padding" Value="2,0,0,0"/>
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <!-- This removes focus visualization -->
                                            <Setter Property="Control.Template" Value="{x:Null}"/>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                </Trigger>
                                                <!-- Some default triggers removed to avoid background changes on selection -->
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>

                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBox.ItemTemplate>
                            <DataTemplate >
                                <CheckBox Content="{Binding TagName}" IsChecked="{Binding IsCheked, Mode=TwoWay}"  Style="{StaticResource TagFiltrStyle}"></CheckBox>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Border>


                <ListBox Margin="5" ItemsSource="{Binding Marks}" HorizontalContentAlignment="Stretch"  VerticalContentAlignment="Stretch" Grid.Column="2" Grid.Row="1" Background="{StaticResource MidBrsh}" BorderBrush="{StaticResource MidBrsh}">

                    <!--стіль, шоб не виділялось при наведенні-->
                    <ListBox.ItemContainerStyle>
                        <Style  TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Background" Value="{StaticResource LightBrsh}"/>
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Padding" Value="2,0,0,0"/>
                            <Setter Property="Margin" Value="5 0 5 0"/>
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <!--This removes focus visualization-->
                                        <Setter Property="Control.Template" Value="{x:Null}"/>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" CornerRadius ="20">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource ExtraLightBrsh}"/>
                                            </Trigger>

                                            <!--Some default triggers removed to avoid background changes on selection-->
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>

                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <ListBox.ItemTemplate>
                        <DataTemplate >
                            <Grid Margin="7 5 7 5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="32" ShowGridLines="False" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="32"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="50"/>
                                </Grid.ColumnDefinitions>

                                <Image Source="{Binding Icon}" Grid.Column="0" HorizontalAlignment="Center" Stretch="None" Height="16"  Width="16"></Image>
                                <Button Content="{Binding Title}" Style="{StaticResource TitleButtonStyle}" Grid.Column="1" Command="{Binding Open}"></Button>
                                <Button Grid.Column="2" Style="{StaticResource ContextMenuButtonStyle}"></Button>

                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

            </ListBox>

            <Button Style="{StaticResource AddButtonStyle}" Content="{StaticResource Add}" Grid.Column ="1" Grid.Row="2" Command="{Binding AddMark}">

            </Button>

        </Grid>
    </Grid>
    
    
    
    
    
    
</Window>
